<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link href = '/main.css' rel="stylesheet">
</head>
<body class="grey-bg">

    <!-- nav bar -->
    <%- include('nav.ejs', {user : user}) %>
    
  <%= JSON.stringify(result) %>
  <br><br>
  <%= JSON.stringify(result2) %>
  
    <div class="detail-bg">
      <div class="chat-screen">
        

        <% for(let i = 0; i < result2.length; i++) { %>
          <% if(result2[i].writer_id == userId) { %>
              <!-- 현재 로그인된 유저가 보낸 메시지 -->
              <div class="chat-box mine">
                  <span><%= result2[i].msg %></span>
              </div>
          <% } else { %>
              <!-- 다른 유저가 보낸 메시지 -->
              <div class="chat-box">
                  <span><%= result2[i].msg %></span>
              </div>
          <% } %>
      <% } %>

        
        
      </div>
    </div>

    <div style="display : flex; justify-content: end;">
      <div class="chat-form">
        <input class="chat-input" value="">
        <button class="chat-button">전송</button>
    </div>
    </div>
    

    <!-- 웹소켓 다운 -->
    <script src="https://cdn.jsdelivr.net/npm/socket.io@4.7.2/client-dist/socket.io.min.js"></script>

    <script>
      const socket = io() //웹소켓 연결
      socket.emit('ask-join', '<%= result._id %>')
      let now = new Date()
      

     
      document.querySelector('.chat-button').addEventListener('click', sendMessage);

      document.querySelector('.chat-input').addEventListener('keydown', function(event) {
    // Enter 키가 눌렸는지 확인 (Enter 키의 keyCode는 13입니다)
    if (event.keyCode === 13) {
        // 기본 Enter 키 이벤트를 방지 (예: 폼 제출 방지)
        event.preventDefault();

        // 메시지 전송 함수 호출
        sendMessage();
    }
});

function sendMessage() {
    let inputValue = document.querySelector('.chat-input').value;

    // 메시지가 비어 있지 않은 경우에만 전송
    if (inputValue.trim() !== "") {
        socket.emit('message-send', { 
            msg: inputValue, 
            room: '<%= result._id %>', 
            date: new Date() 
        });

        // 입력 필드 초기화
        document.querySelector('.chat-input').value = '';
    }
}


      
      socket.on('message-broadcast', (data)=>{
      
        document.querySelector('.chat-screen').insertAdjacentHTML
        ('beforeend', `<div class="chat-box mine"><span>${data}</span></div>`)
      })

    </script>

</body>
</html>